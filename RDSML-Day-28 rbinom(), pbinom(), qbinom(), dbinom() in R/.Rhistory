5+6
setwd("~/")
# Importing the dataset
tooth_data = ToothGrowth
# Creating a function for summarizing the data
# based on the grouping variables
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
View(tooth_data)
# data_sum = rename(data_sum, c("mean" = varname))
return(all_summary)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
# data_sum = rename(data_sum, c("mean" = varname))
return(all_summary)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
View(d_summary)
View(tooth_data)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
# Converting 'dose' to a factor variable
d_summary$dose = as.factor(d_summary$dose)
class(d_summary$dose)
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary)
ggplot(d_summary, aes(x = dose, y = len))
ggplot(d_summary, aes(x = dose, y = len))+
geom_bar(stat = "identity")
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity")
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd))
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge())
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(1))
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9))
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9))+
theme_minimal()
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-28 rbinom(), pbinom(), qbinom(), dbinom() in R")
rbinom(n = 10, size = 1, prob = 0.5)
rbinom(n = 10, size = 5, prob = 0.5)
pbinom(q = 5, size = 10, prob = 0.5)
# You toss a coin 5 times. What is the probability of getting exactly 3 heads?
pbinom(q = 3, size = 5, prob = 0.5)
qnorm(p = 0.30, size = 10, prob = 0.5)
qbinorm(p = 0.30, size = 10, prob = 0.5)
qbinom(p = 0.30, size = 10, prob = 0.5)
# You toss a coin 5 times. What is the probability of getting exactly 3 heads?
pbinom(q = 3, size = 5, prob = 0.5) - pbinom(q = 2, size = 5, prob = 0.5)
# Explaining dbinom()
# Calculating the probability of getting exact number of success
dbinom(x = 3, size = 5, prob = 0.5)
dbinom(x = 3, size = 10, prob = 0.25)
