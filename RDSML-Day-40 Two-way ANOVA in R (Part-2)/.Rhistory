5+6
setwd("~/")
# Importing the dataset
tooth_data = ToothGrowth
# Creating a function for summarizing the data
# based on the grouping variables
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
View(tooth_data)
# data_sum = rename(data_sum, c("mean" = varname))
return(all_summary)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
# data_sum = rename(data_sum, c("mean" = varname))
return(all_summary)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
View(d_summary)
View(tooth_data)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
# Converting 'dose' to a factor variable
d_summary$dose = as.factor(d_summary$dose)
class(d_summary$dose)
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary)
ggplot(d_summary, aes(x = dose, y = len))
ggplot(d_summary, aes(x = dose, y = len))+
geom_bar(stat = "identity")
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity")
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd))
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge())
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(1))
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9))
ggplot(d_summary, aes(x = dose, y = len, fill = supp))+
geom_bar(stat = "identity", position = position_dodge())+
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9))+
theme_minimal()
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-40 Two-way ANOVA in R (Part-2)")
# installing packages
# install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
library(tidyverse)
# Importing the dataset
d <- read.csv("cropdata.csv")
# Quick Exploratory Descriptive Analysis
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
# Quick data summary visualization
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = .2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
View(d)
# Fit the model
m <- aov(y ~ fert + irr + fert * irr, data = d)
summary(m)
# Assumptions Visual checks
plot(m)
plot(m)
# installing packages
# install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
library(tidyverse)
# Importing the dataset
d <- read.csv("cropdata.csv")
# Quick Exploratory Descriptive Analysis
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
# Quick data summary visualization
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = .2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
# Fit the model
m <- aov(y ~ fert + irr + fert * irr, data = d)
summary(m)
# Assumptions Visual checks
par(mfrow = c(2,2))
plot(m)
par(mfrow = c(1,1))
# Shapiro-Wilk on residuals (normality)
res <- residuals(m)
shapiro.test(res)
# Levene's test for equal variances
car::leveneTest(y ~ fert*irr, data = d, center = median)
# Interaction contrasts (simple effects):
# effect of fert at each level of irr
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
# effect of irr at each level of fert
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
